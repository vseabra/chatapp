services:
  chat-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
      - rabbitmq
    restart: unless-stopped
    environment:
      MONGODB_URI: "mongodb://root:W4d1v6tyYu@mongodb:27017/chat?authSource=admin"
      JWT_SECRET: "dev-secret-change-me"
      PORT: 8080
      RABBITMQ_URI: "amqp://guest:guest@rabbitmq:5672/"

  stockbot:
    build:
      context: ./stockbot
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    depends_on:
      - chat-api
      - mongodb
      - rabbitmq
    restart: unless-stopped
    environment:
      PORT: 8181
      RABBITMQ_URI: "amqp://guest:guest@rabbitmq:5672/"
      RABBITMQ_EXCHANGE: "chat.events"
      RABBITMQ_EXCHANGE_TYPE: "topic"
      RABBITMQ_KEY_REQUESTED: "bot.requested"
      RABBITMQ_KEY_RESPONSE: "bot.response.submit"
      RABBITMQ_QUEUE: "bot.stockbot"

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: W4d1v6tyYu
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db:rw

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # RabbitMQ broker
      - "15672:15672" # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq:rw
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    depends_on:
      - chat-api
    restart: unless-stopped
    environment:
      CHOKIDAR_USEPOLLING: "true"
      WATCHPACK_POLLING: "true"
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    command: >
      sh -c "npm ci
      && npm run dev -- --host 0.0.0.0 --port 5173 --strictPort"
